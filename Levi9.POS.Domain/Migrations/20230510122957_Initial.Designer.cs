// <auto-generated />
using System;
using Levi9.POS.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Levi9.POS.Domain.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20230510122957_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Levi9.POS.Domain.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<Guid>("GlobalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastUpdate")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "1.maja, Derventa",
                            Email = "marko@gmail.com",
                            GlobalId = new Guid("e9efe787-01f6-4185-969b-2c270d0ca85d"),
                            LastUpdate = "133281953975052071",
                            Name = "Marko",
                            PasswordHash = "password",
                            Phone = "+387 65 132 527",
                            Salt = "Salt"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Koste Racina 24, Novi Sad",
                            Email = "aleksa@gmail.com",
                            GlobalId = new Guid("ebcbb4cf-b09d-4363-8c47-aaaf374d8d74"),
                            LastUpdate = "133281953975052084",
                            Name = "Aleksa",
                            PasswordHash = "password123",
                            Phone = "+387 64 862 476",
                            Salt = "Salt123"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Strumicka 13, Novi Sad",
                            Email = "milos@gmail.com",
                            GlobalId = new Guid("4e835e2d-e6e4-423b-91d7-065a04fe9539"),
                            LastUpdate = "133281953975052091",
                            Name = "Milos",
                            PasswordHash = "password123",
                            Phone = "+387 65 912 127",
                            Salt = "Salt123"
                        });
                });

            modelBuilder.Entity("Levi9.POS.Domain.Models.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("CreationDay")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<string>("DocumetType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("GlobalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastUpdate")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Documents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientId = 1,
                            CreationDay = "133281953975052112",
                            DocumetType = "INVOICE",
                            GlobalId = new Guid("792859e6-1a29-4f2a-ac89-df5a7c32813f"),
                            LastUpdate = "133281953975052119"
                        },
                        new
                        {
                            Id = 2,
                            ClientId = 2,
                            CreationDay = "133281953975052126",
                            DocumetType = "INVOICE",
                            GlobalId = new Guid("f750d6cc-b2e4-460b-945c-993df1c069a4"),
                            LastUpdate = "133281953975052131"
                        },
                        new
                        {
                            Id = 3,
                            ClientId = 3,
                            CreationDay = "133281953975052137",
                            DocumetType = "INVOICE",
                            GlobalId = new Guid("59b2716d-4a05-4356-9066-cba58bcca141"),
                            LastUpdate = "133281953975052143"
                        });
                });

            modelBuilder.Entity("Levi9.POS.Domain.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AvailableQuantity")
                        .HasColumnType("int");

                    b.Property<Guid>("GlobalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastUpdate")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<string>("ProductImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvailableQuantity = 30,
                            GlobalId = new Guid("8419e5f6-00e6-48e1-9ba6-db7d02455184"),
                            LastUpdate = "133281953975051861",
                            Name = "Levi 9 T-Shirt",
                            Price = 10f,
                            ProductImageUrl = "baseURL//nekiurl1.png"
                        },
                        new
                        {
                            Id = 2,
                            AvailableQuantity = 10,
                            GlobalId = new Guid("c4650998-4480-4636-b6fc-bd783bd6e8ee"),
                            LastUpdate = "133281953975051935",
                            Name = "Novis T-Shirt",
                            Price = 15f,
                            ProductImageUrl = "baseURL//nekiurl2.png"
                        },
                        new
                        {
                            Id = 3,
                            AvailableQuantity = 20,
                            GlobalId = new Guid("fced7455-8b25-4a78-9aee-89e8cf791f69"),
                            LastUpdate = "133281953975051944",
                            Name = "Vega IT T-Shirt",
                            Price = 20f,
                            ProductImageUrl = "baseURL//nekiurl3.png"
                        });
                });

            modelBuilder.Entity("Levi9.POS.Domain.Models.ProductDocument", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("DocumentId")
                        .HasColumnType("int");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "DocumentId");

                    b.HasIndex("DocumentId");

                    b.ToTable("ProductDocuments");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            DocumentId = 1,
                            Currency = "RSD",
                            Price = 1200f,
                            Quantity = 20
                        },
                        new
                        {
                            ProductId = 2,
                            DocumentId = 2,
                            Currency = "EUR",
                            Price = 10f,
                            Quantity = 10
                        },
                        new
                        {
                            ProductId = 3,
                            DocumentId = 3,
                            Currency = "USD",
                            Price = 15f,
                            Quantity = 15
                        });
                });

            modelBuilder.Entity("Levi9.POS.Domain.Models.Document", b =>
                {
                    b.HasOne("Levi9.POS.Domain.Models.Client", "Client")
                        .WithMany("Documents")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Levi9.POS.Domain.Models.ProductDocument", b =>
                {
                    b.HasOne("Levi9.POS.Domain.Models.Document", "Document")
                        .WithMany("ProductDocuments")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Levi9.POS.Domain.Models.Product", "Product")
                        .WithMany("ProductDocuments")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Document");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Levi9.POS.Domain.Models.Client", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("Levi9.POS.Domain.Models.Document", b =>
                {
                    b.Navigation("ProductDocuments");
                });

            modelBuilder.Entity("Levi9.POS.Domain.Models.Product", b =>
                {
                    b.Navigation("ProductDocuments");
                });
#pragma warning restore 612, 618
        }
    }
}
