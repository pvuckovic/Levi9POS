// <auto-generated />
using System;
using Levi9.POS.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Levi9.POS.Domain.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    partial class DataBaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Levi9.POS.Domain.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<Guid>("GlobalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastUpdate")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "1.maja, Derventa",
                            Email = "marko@gmail.com",
                            GlobalId = new Guid("c6029928-076f-44a4-a01f-37ad0e4b0e09"),
                            LastUpdate = "133280975643412338",
                            Name = "Marko",
                            Password = "password",
                            Phone = "+387 65 132 527",
                            Salt = "Salt"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Koste Racina 24, Novi Sad",
                            Email = "aleksa@gmail.com",
                            GlobalId = new Guid("606ea448-f69b-413f-9471-7e4a7912491a"),
                            LastUpdate = "133280975643412363",
                            Name = "Aleksa",
                            Password = "password123",
                            Phone = "+387 64 862 476",
                            Salt = "Salt123"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Strumicka 13, Novi Sad",
                            Email = "milos@gmail.com",
                            GlobalId = new Guid("41c3ebae-ca20-43ea-b048-cf9489163f21"),
                            LastUpdate = "133280975643412379",
                            Name = "Milos",
                            Password = "password123",
                            Phone = "+387 65 912 127",
                            Salt = "Salt123"
                        });
                });

            modelBuilder.Entity("Levi9.POS.Domain.Models.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("CreationDay")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("GlobalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastUpdate")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Documents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientId = 1,
                            CreationDay = "133280975643412437",
                            DocumentType = "INVOICE",
                            GlobalId = new Guid("87e4a1fc-469d-422e-9d7d-efbcdc7340e5"),
                            LastUpdate = "133280975643412450"
                        },
                        new
                        {
                            Id = 2,
                            ClientId = 2,
                            CreationDay = "133280975643412467",
                            DocumentType = "INVOICE",
                            GlobalId = new Guid("9be581d0-26ac-4d37-85ef-30c75ac2734c"),
                            LastUpdate = "133280975643412479"
                        },
                        new
                        {
                            Id = 3,
                            ClientId = 3,
                            CreationDay = "133280975643412494",
                            DocumentType = "INVOICE",
                            GlobalId = new Guid("0a60bdba-d6e5-43ae-9a03-8dd6982516d8"),
                            LastUpdate = "133280975643412507"
                        });
                });

            modelBuilder.Entity("Levi9.POS.Domain.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AvailableQuantity")
                        .HasColumnType("int");

                    b.Property<Guid>("GlobalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastUpdate")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<string>("ProductImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvailableQuantity = 30,
                            GlobalId = new Guid("ff8f3305-a43b-43a8-9798-ae62a772d54b"),
                            LastUpdate = "133280975643411949",
                            Name = "Levi 9 T-Shirt",
                            Price = 10f,
                            ProductImageUrl = "baseURL//nekiurl1.png"
                        },
                        new
                        {
                            Id = 2,
                            AvailableQuantity = 10,
                            GlobalId = new Guid("c4679aca-669b-4264-b086-4384560e3550"),
                            LastUpdate = "133280975643412049",
                            Name = "Novis T-Shirt",
                            Price = 15f,
                            ProductImageUrl = "baseURL//nekiurl2.png"
                        },
                        new
                        {
                            Id = 3,
                            AvailableQuantity = 20,
                            GlobalId = new Guid("d7a3bde3-16fc-4470-b9aa-5ae81f590fb3"),
                            LastUpdate = "133280975643412066",
                            Name = "Vega IT T-Shirt",
                            Price = 20f,
                            ProductImageUrl = "baseURL//nekiurl3.png"
                        });
                });

            modelBuilder.Entity("Levi9.POS.Domain.Models.ProductDocument", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("DocumentId")
                        .HasColumnType("int");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "DocumentId");

                    b.HasIndex("DocumentId");

                    b.ToTable("ProductDocuments");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            DocumentId = 1,
                            Currency = "RSD",
                            Price = 1200f,
                            Quantity = 20
                        },
                        new
                        {
                            ProductId = 2,
                            DocumentId = 2,
                            Currency = "EUR",
                            Price = 10f,
                            Quantity = 10
                        },
                        new
                        {
                            ProductId = 3,
                            DocumentId = 3,
                            Currency = "USD",
                            Price = 15f,
                            Quantity = 15
                        });
                });

            modelBuilder.Entity("Levi9.POS.Domain.Models.Document", b =>
                {
                    b.HasOne("Levi9.POS.Domain.Models.Client", "Client")
                        .WithMany("Documents")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Levi9.POS.Domain.Models.ProductDocument", b =>
                {
                    b.HasOne("Levi9.POS.Domain.Models.Document", "Document")
                        .WithMany("ProductDocuments")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Levi9.POS.Domain.Models.Product", "Product")
                        .WithMany("ProductDocuments")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Document");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Levi9.POS.Domain.Models.Client", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("Levi9.POS.Domain.Models.Document", b =>
                {
                    b.Navigation("ProductDocuments");
                });

            modelBuilder.Entity("Levi9.POS.Domain.Models.Product", b =>
                {
                    b.Navigation("ProductDocuments");
                });
#pragma warning restore 612, 618
        }
    }
}
